kind: ConfigMap 
apiVersion: v1 
metadata:
  name: card-props
  namespace: demo-system
data:
  bgColor: "#1f1e33"
  fgColor: "#fff280"
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: typicode-endpoint
  namespace: demo-system
stringData:
  server-url: https://jsonplaceholder.typicode.com
---
apiVersion: templates.krateo.io/v1alpha1
kind: Widget
metadata:
  name: static
  namespace: demo-system
spec:
  type: card
  propsRef:
    name: card-props
    namespace: demo-system 
  actions:
  - template:
      apiVersion: templates.krateo.io/v1alpha1
      resource: forms
      name: fireworksapp
      namespace: demo-system
  app:
    template:
      color: red
      title: Lorem Ipsum
      content: |-
        Nulla quam lectus, venenatis at nunc nec, suscipit convallis sapien. 
        Suspendisse id venenatis orci, a semper ante. 
        Mauris convallis sagittis tincidunt. 
        Aenean egestas auctor interdum.
      tags: lorem,ipsum
---
apiVersion: templates.krateo.io/v1alpha1
kind: Widget
metadata:
  #annotations:
  #  "krateo.io/verbose-api": "true"
  name: external-api
  namespace: demo-system
spec:
  type: card
  propsRef:
    name: card-props
    namespace: demo-system 
  actions:
  - template:
      apiVersion: templates.krateo.io/v1alpha1
      resource: forms
      name: fireworksapp
      namespace: demo-system
  - template:
      apiVersion: templates.krateo.io/v1alpha1
      resource: widgets
      name: external-api
      namespace: demo-system
  app:
    template:
      title: ${ .api2.items[0] | (.name  + " -> " + .email) }
      content: ${ .api2.items[0].body }
  api:
  - name: api1
    path: "/todos/1"
    endpointRef:
      name: typicode-endpoint
      namespace: demo-system
    verb: GET
    headers:
    - 'Accept: application/json'
  - name: api2
    dependOn: api1
    path: ${ "/todos/" + (.api1.id|tostring) +  "/comments" }
    endpointRef:
      name: typicode-endpoint
      namespace: demo-system
    verb: GET
    headers:
    - 'Accept: application/json'
---
apiVersion: templates.krateo.io/v1alpha1
kind: Widget
metadata:
  #annotations:
  #  "krateo.io/verbose-api": "true"
  name: internal-api
  namespace: demo-system
spec:
  type: card
  propsRef:
    name: card-props
    namespace: demo-system 
  actions:
  - iterator: .allPods.items[:3]
    template:
      apiVersion: v1
      resource: pods
      name: ${ .metadata.name }
      namespace: ${ .metadata.namespace }
  app:
    iterator: .allPods.items[:5]
    template:
      title: ${ .metadata.name }
      content: ${ .spec.containers[0] | .image }
  api:
  - name: allPods
    path: "/api/v1/pods"
    verb: GET
    headers:
    - 'Accept: application/json'
